#ifndef G4M_EUROPE_DG_ARRAYS_PROJECT_INDEPENDENT_HPP
#define G4M_EUROPE_DG_ARRAYS_PROJECT_INDEPENDENT_HPP

#include <string>
#include <array>

#include "../constants.hpp"

using namespace std;

using namespace g4m::Constants;

namespace g4m::Arrays {

    consteval array<uint8_t, numberOfCountries> initCountryCodeOrder() noexcept {
        array<uint8_t, numberOfCountries> countryCodeOrder{};
        countryCodeOrder.fill(244);
        countryCodeOrder[0] = 12;
        countryCodeOrder[1] = 0;
        countryCodeOrder[2] = 6;
        countryCodeOrder[3] = 7;
        countryCodeOrder[4] = 1;
        countryCodeOrder[5] = 2;
        countryCodeOrder[6] = 5;
        countryCodeOrder[7] = 155;
        countryCodeOrder[8] = 228;
        countryCodeOrder[9] = 10;
        countryCodeOrder[10] = 11;
        countryCodeOrder[11] = 4;
        countryCodeOrder[12] = 8;
        countryCodeOrder[13] = 76;
        countryCodeOrder[14] = 9;
        countryCodeOrder[15] = 13;
        countryCodeOrder[16] = 14;
        countryCodeOrder[17] = 15;
        countryCodeOrder[18] = 35;
        countryCodeOrder[19] = 21;
        countryCodeOrder[20] = 23;
        countryCodeOrder[21] = 34;
        countryCodeOrder[22] = 18;
        countryCodeOrder[23] = 33;
        countryCodeOrder[24] = 17;
        countryCodeOrder[25] = 16;
        countryCodeOrder[26] = 27;
        countryCodeOrder[27] = 20;
        countryCodeOrder[28] = 22;
        countryCodeOrder[29] = 24;
        countryCodeOrder[30] = 26;
        countryCodeOrder[31] = 30;
        countryCodeOrder[32] = 19;
        countryCodeOrder[33] = 32;
        countryCodeOrder[34] = 25;
        countryCodeOrder[35] = 29;
        countryCodeOrder[36] = 28;
        countryCodeOrder[37] = 41;
        countryCodeOrder[38] = 38;
        countryCodeOrder[39] = 46;
        countryCodeOrder[40] = 210;
        countryCodeOrder[41] = 43;
        countryCodeOrder[42] = 44;
        countryCodeOrder[43] = 53;
        countryCodeOrder[44] = 37;
        countryCodeOrder[45] = 50;
        countryCodeOrder[46] = 49;
        countryCodeOrder[47] = 51;
        countryCodeOrder[48] = 47;
        countryCodeOrder[49] = 48;
        countryCodeOrder[50] = 39;
        countryCodeOrder[51] = 52;
        countryCodeOrder[52] = 55;
        countryCodeOrder[53] = 45;
        countryCodeOrder[54] = 40;
        countryCodeOrder[55] = 56;
        countryCodeOrder[56] = 57;
        countryCodeOrder[57] = 80;
        countryCodeOrder[58] = 59;
        countryCodeOrder[59] = 60;
        countryCodeOrder[60] = 58;
        countryCodeOrder[61] = 61;
        countryCodeOrder[62] = 3;
        countryCodeOrder[63] = 62;
        countryCodeOrder[64] = 63;
        countryCodeOrder[65] = 66;
        countryCodeOrder[66] = 240;
        countryCodeOrder[67] = 203;
        countryCodeOrder[68] = 67;
        countryCodeOrder[69] = 68;
        countryCodeOrder[70] = 72;
        countryCodeOrder[71] = 71;
        countryCodeOrder[72] = 70;
        countryCodeOrder[73] = 73;
        countryCodeOrder[74] = 69;
        countryCodeOrder[75] = 142;
        countryCodeOrder[76] = 77;
        countryCodeOrder[77] = 83;
        countryCodeOrder[78] = 79;
        countryCodeOrder[79] = 81;
        countryCodeOrder[80] = 82;
        countryCodeOrder[81] = 91;
        countryCodeOrder[82] = 87;
        countryCodeOrder[83] = 78;
        countryCodeOrder[84] = 92;
        countryCodeOrder[85] = 65;
        countryCodeOrder[86] = 84;
        countryCodeOrder[87] = 86;
        countryCodeOrder[88] = 85;
        countryCodeOrder[89] = 89;
        countryCodeOrder[90] = 74;
        countryCodeOrder[91] = 88;
        countryCodeOrder[92] = 93;
        countryCodeOrder[93] = 97;
        countryCodeOrder[94] = 95;
        countryCodeOrder[95] = 96;
        countryCodeOrder[96] = 54;
        countryCodeOrder[97] = 94;
        countryCodeOrder[98] = 98;
        countryCodeOrder[99] = 101;
        countryCodeOrder[100] = 100;
        countryCodeOrder[101] = 31;
        countryCodeOrder[102] = 104;
        countryCodeOrder[103] = 102;
        countryCodeOrder[104] = 103;
        countryCodeOrder[105] = 99;
        countryCodeOrder[106] = 106;
        countryCodeOrder[107] = 107;
        countryCodeOrder[108] = 108;
        countryCodeOrder[109] = 111;
        countryCodeOrder[110] = 109;
        countryCodeOrder[111] = 112;
        countryCodeOrder[112] = 113;
        countryCodeOrder[113] = 118;
        countryCodeOrder[114] = 36;
        countryCodeOrder[115] = 114;
        countryCodeOrder[116] = 184;
        countryCodeOrder[117] = 116;
        countryCodeOrder[118] = 117;
        countryCodeOrder[119] = 119;
        countryCodeOrder[120] = 121;
        countryCodeOrder[121] = 123;
        countryCodeOrder[122] = 124;
        countryCodeOrder[123] = 185;
        countryCodeOrder[124] = 125;
        countryCodeOrder[125] = 204;
        countryCodeOrder[126] = 122;
        countryCodeOrder[127] = 126;
        countryCodeOrder[128] = 127;
        countryCodeOrder[129] = 120;
        countryCodeOrder[130] = 128;
        countryCodeOrder[131] = 148;
        countryCodeOrder[132] = 144;
        countryCodeOrder[133] = 143;
        countryCodeOrder[134] = 130;
        countryCodeOrder[135] = 133;
        countryCodeOrder[136] = 141;
        countryCodeOrder[137] = 136;
        countryCodeOrder[138] = 129;
        countryCodeOrder[139] = 134;
        countryCodeOrder[140] = 135;
        countryCodeOrder[141] = 150;
        countryCodeOrder[142] = 146;
        countryCodeOrder[143] = 145;
        countryCodeOrder[144] = 163;
        countryCodeOrder[145] = 149;
        countryCodeOrder[146] = 138;
        countryCodeOrder[147] = 147;
        countryCodeOrder[148] = 137;
        countryCodeOrder[149] = 139;
        countryCodeOrder[150] = 131;
        countryCodeOrder[151] = 132;
        countryCodeOrder[152] = 140;
        countryCodeOrder[153] = 151;
        countryCodeOrder[154] = 156;
        countryCodeOrder[155] = 159;
        countryCodeOrder[156] = 162;
        countryCodeOrder[157] = 160;
        countryCodeOrder[158] = 158;
        countryCodeOrder[159] = 161;
        countryCodeOrder[160] = 154;
        countryCodeOrder[161] = 164;
        countryCodeOrder[162] = 153;
        countryCodeOrder[163] = 152;
        countryCodeOrder[164] = 157;
        countryCodeOrder[165] = 165;
        countryCodeOrder[166] = 166;
        countryCodeOrder[167] = 169;
        countryCodeOrder[168] = 174;
        countryCodeOrder[169] = 172;
        countryCodeOrder[170] = 173;
        countryCodeOrder[171] = 167;
        countryCodeOrder[172] = 170;
        countryCodeOrder[173] = 175;
        countryCodeOrder[174] = 177;
        countryCodeOrder[175] = 115;
        countryCodeOrder[176] = 176;
        countryCodeOrder[177] = 171;
        countryCodeOrder[178] = 168;
        countryCodeOrder[179] = 75;
        countryCodeOrder[180] = 178;
        countryCodeOrder[181] = 179;
        countryCodeOrder[182] = 180;
        countryCodeOrder[183] = 181;
        countryCodeOrder[184] = 182;
        countryCodeOrder[185] = 191;
        countryCodeOrder[186] = 205;
        countryCodeOrder[187] = 192;
        countryCodeOrder[188] = 196;
        countryCodeOrder[189] = 202;
        countryCodeOrder[190] = 183;
        countryCodeOrder[191] = 207;
        countryCodeOrder[192] = 199;
        countryCodeOrder[193] = 195;
        countryCodeOrder[194] = 64;
        countryCodeOrder[195] = 189;
        countryCodeOrder[196] = 200;
        countryCodeOrder[197] = 186;
        countryCodeOrder[198] = 193;
        countryCodeOrder[199] = 190;
        countryCodeOrder[200] = 206;
        countryCodeOrder[201] = 197;
        countryCodeOrder[202] = 198;
        countryCodeOrder[203] = 209;
        countryCodeOrder[204] = 208;
        countryCodeOrder[205] = 194;
        countryCodeOrder[206] = 211;
        countryCodeOrder[207] = 224;
        countryCodeOrder[208] = 42;
        countryCodeOrder[209] = 217;
        countryCodeOrder[210] = 215;
        countryCodeOrder[211] = 213;
        countryCodeOrder[212] = 218;
        countryCodeOrder[213] = 223;
        countryCodeOrder[214] = 216;
        countryCodeOrder[215] = 219;
        countryCodeOrder[216] = 220;
        countryCodeOrder[217] = 221;
        countryCodeOrder[218] = 222;
        countryCodeOrder[219] = 225;
        countryCodeOrder[220] = 212;
        countryCodeOrder[221] = 214;
        countryCodeOrder[222] = 226;
        countryCodeOrder[223] = 227;
        countryCodeOrder[224] = 230;
        countryCodeOrder[225] = 231;
        countryCodeOrder[226] = 229;
        countryCodeOrder[227] = 232;
        countryCodeOrder[228] = 234;
        countryCodeOrder[229] = 187;
        countryCodeOrder[230] = 235;
        countryCodeOrder[231] = 237;
        countryCodeOrder[232] = 238;
        countryCodeOrder[233] = 236;
        countryCodeOrder[234] = 233;
        countryCodeOrder[235] = 239;
        countryCodeOrder[236] = 188;
        countryCodeOrder[237] = 241;
        countryCodeOrder[238] = 201;
        countryCodeOrder[239] = 242;
        countryCodeOrder[240] = 243;
        countryCodeOrder[241] = 90;
        countryCodeOrder[242] = 105;
        countryCodeOrder[243] = 110;
        return countryCodeOrder;
    }

    consteval array<string_view, numberOfCountries> initCountryOrderISO() noexcept {
        array<string_view, numberOfCountries> countryOrderISO;
        countryOrderISO[0] = "AFG";
        countryOrderISO[1] = "ALA";
        countryOrderISO[2] = "ALB";
        countryOrderISO[3] = "DZA";
        countryOrderISO[4] = "ASM";
        countryOrderISO[5] = "AND";
        countryOrderISO[6] = "AGO";
        countryOrderISO[7] = "AIA";
        countryOrderISO[8] = "ATA";
        countryOrderISO[9] = "ATG";
        countryOrderISO[10] = "ARG";
        countryOrderISO[11] = "ARM";
        countryOrderISO[12] = "ABW";
        countryOrderISO[13] = "AUS";
        countryOrderISO[14] = "AUT";
        countryOrderISO[15] = "AZE";
        countryOrderISO[16] = "BHS";
        countryOrderISO[17] = "BHR";
        countryOrderISO[18] = "BGD";
        countryOrderISO[19] = "BRB";
        countryOrderISO[20] = "BLR";
        countryOrderISO[21] = "BEL";
        countryOrderISO[22] = "BLZ";
        countryOrderISO[23] = "BEN";
        countryOrderISO[24] = "BMU";
        countryOrderISO[25] = "BTN";
        countryOrderISO[26] = "BOL";
        countryOrderISO[27] = "BIH";
        countryOrderISO[28] = "BWA";
        countryOrderISO[29] = "BVT";
        countryOrderISO[30] = "BRA";
        countryOrderISO[31] = "IOT";
        countryOrderISO[32] = "BRN";
        countryOrderISO[33] = "BGR";
        countryOrderISO[34] = "BFA";
        countryOrderISO[35] = "BDI";
        countryOrderISO[36] = "KHM";
        countryOrderISO[37] = "CMR";
        countryOrderISO[38] = "CAN";
        countryOrderISO[39] = "CPV";
        countryOrderISO[40] = "CYM";
        countryOrderISO[41] = "CAF";
        countryOrderISO[42] = "TCD";
        countryOrderISO[43] = "CHL";
        countryOrderISO[44] = "CHN";
        countryOrderISO[45] = "CXR";
        countryOrderISO[46] = "CCK";
        countryOrderISO[47] = "COL";
        countryOrderISO[48] = "COM";
        countryOrderISO[49] = "COG";
        countryOrderISO[50] = "COD";
        countryOrderISO[51] = "COK";
        countryOrderISO[52] = "CRI";
        countryOrderISO[53] = "CIV";
        countryOrderISO[54] = "HRV";
        countryOrderISO[55] = "CUB";
        countryOrderISO[56] = "CYP";
        countryOrderISO[57] = "CZE";
        countryOrderISO[58] = "DNK";
        countryOrderISO[59] = "DJI";
        countryOrderISO[60] = "DMA";
        countryOrderISO[61] = "DOM";
        countryOrderISO[62] = "ECU";
        countryOrderISO[63] = "EGY";
        countryOrderISO[64] = "SLV";
        countryOrderISO[65] = "GNQ";
        countryOrderISO[66] = "ERI";
        countryOrderISO[67] = "EST";
        countryOrderISO[68] = "ETH";
        countryOrderISO[69] = "FRO";
        countryOrderISO[70] = "FKL";
        countryOrderISO[71] = "FJI";
        countryOrderISO[72] = "FIN";
        countryOrderISO[73] = "FRA";
        countryOrderISO[74] = "GUF";
        countryOrderISO[75] = "PYF";
        countryOrderISO[76] = "ATF";
        countryOrderISO[77] = "GAB";
        countryOrderISO[78] = "GMB";
        countryOrderISO[79] = "GEO";
        countryOrderISO[80] = "DEU";
        countryOrderISO[81] = "GHA";
        countryOrderISO[82] = "GIB";
        countryOrderISO[83] = "GBR";
        countryOrderISO[84] = "GRC";
        countryOrderISO[85] = "GRL";
        countryOrderISO[86] = "GRD";
        countryOrderISO[87] = "GLP";
        countryOrderISO[88] = "GUM";
        countryOrderISO[89] = "GTM";
        countryOrderISO[90] = "GGY";
        countryOrderISO[91] = "GIN";
        countryOrderISO[92] = "GNB";
        countryOrderISO[93] = "GUY";
        countryOrderISO[94] = "HTI";
        countryOrderISO[95] = "HMD";
        countryOrderISO[96] = "HND";
        countryOrderISO[97] = "HKG";
        countryOrderISO[98] = "HUN";
        countryOrderISO[99] = "ISL";
        countryOrderISO[100] = "IND";
        countryOrderISO[101] = "IDN";
        countryOrderISO[102] = "IRN";
        countryOrderISO[103] = "IRQ";
        countryOrderISO[104] = "IRL";
        countryOrderISO[105] = "IMN";
        countryOrderISO[106] = "ISR";
        countryOrderISO[107] = "ITA";
        countryOrderISO[108] = "JAM";
        countryOrderISO[109] = "JPN";
        countryOrderISO[110] = "JEY";
        countryOrderISO[111] = "JOR";
        countryOrderISO[112] = "KAZ";
        countryOrderISO[113] = "KEN";
        countryOrderISO[114] = "KIR";
        countryOrderISO[115] = "PRK";
        countryOrderISO[116] = "KOR";
        countryOrderISO[117] = "KWT";
        countryOrderISO[118] = "KGZ";
        countryOrderISO[119] = "LAO";
        countryOrderISO[120] = "LVA";
        countryOrderISO[121] = "LBN";
        countryOrderISO[122] = "LSO";
        countryOrderISO[123] = "LBR";
        countryOrderISO[124] = "LBY";
        countryOrderISO[125] = "LIE";
        countryOrderISO[126] = "LTU";
        countryOrderISO[127] = "LUX";
        countryOrderISO[128] = "MAC";
        countryOrderISO[129] = "MKD";
        countryOrderISO[130] = "MDG";
        countryOrderISO[131] = "MWI";
        countryOrderISO[132] = "MYS";
        countryOrderISO[133] = "MDV";
        countryOrderISO[134] = "MLI";
        countryOrderISO[135] = "MLT";
        countryOrderISO[136] = "MHL";
        countryOrderISO[137] = "MTQ";
        countryOrderISO[138] = "MRT";
        countryOrderISO[139] = "MUS";
        countryOrderISO[140] = "MYT";
        countryOrderISO[141] = "MEX";
        countryOrderISO[142] = "FSM";
        countryOrderISO[143] = "MDA";
        countryOrderISO[144] = "MCO";
        countryOrderISO[145] = "MNG";
        countryOrderISO[146] = "MNE";
        countryOrderISO[147] = "MSR";
        countryOrderISO[148] = "MAR";
        countryOrderISO[149] = "MOZ";
        countryOrderISO[150] = "MMR";
        countryOrderISO[151] = "NAM";
        countryOrderISO[152] = "NRU";
        countryOrderISO[153] = "NPL";
        countryOrderISO[154] = "NLD";
        countryOrderISO[155] = "ANT";
        countryOrderISO[156] = "NCL";
        countryOrderISO[157] = "NZL";
        countryOrderISO[158] = "NIC";
        countryOrderISO[159] = "NER";
        countryOrderISO[160] = "NGA";
        countryOrderISO[161] = "NIU";
        countryOrderISO[162] = "NFK";
        countryOrderISO[163] = "MNP";
        countryOrderISO[164] = "NOR";
        countryOrderISO[165] = "OMN";
        countryOrderISO[166] = "PAK";
        countryOrderISO[167] = "PLW";
        countryOrderISO[168] = "PSE";
        countryOrderISO[169] = "PAN";
        countryOrderISO[170] = "PNG";
        countryOrderISO[171] = "PRY";
        countryOrderISO[172] = "PER";
        countryOrderISO[173] = "PHL";
        countryOrderISO[174] = "PCN";
        countryOrderISO[175] = "POL";
        countryOrderISO[176] = "PRT";
        countryOrderISO[177] = "PRI";
        countryOrderISO[178] = "QAT";
        countryOrderISO[179] = "REU";
        countryOrderISO[180] = "ROM";
        countryOrderISO[181] = "RUS";
        countryOrderISO[182] = "RWA";
        countryOrderISO[183] = "SHN";
        countryOrderISO[184] = "KNA";
        countryOrderISO[185] = "LCA";
        countryOrderISO[186] = "SPM";
        countryOrderISO[187] = "VCT";
        countryOrderISO[188] = "WSM";
        countryOrderISO[189] = "SMR";
        countryOrderISO[190] = "STP";
        countryOrderISO[191] = "SAU";
        countryOrderISO[192] = "SEN";
        countryOrderISO[193] = "SRB";
        countryOrderISO[194] = "SYC";
        countryOrderISO[195] = "SLE";
        countryOrderISO[196] = "SGP";
        countryOrderISO[197] = "SVK";
        countryOrderISO[198] = "SVN";
        countryOrderISO[199] = "SLB";
        countryOrderISO[200] = "SOM";
        countryOrderISO[201] = "ZAF";
        countryOrderISO[202] = "SGS";
        countryOrderISO[203] = "ESP";
        countryOrderISO[204] = "LKA";
        countryOrderISO[205] = "SDN";
        countryOrderISO[206] = "SUR";
        countryOrderISO[207] = "SJM";
        countryOrderISO[208] = "SWZ";
        countryOrderISO[209] = "SWE";
        countryOrderISO[210] = "CHE";
        countryOrderISO[211] = "SYR";
        countryOrderISO[212] = "TWN";
        countryOrderISO[213] = "TJK";
        countryOrderISO[214] = "TZA";
        countryOrderISO[215] = "THA";
        countryOrderISO[216] = "TLS";
        countryOrderISO[217] = "TGO";
        countryOrderISO[218] = "TKL";
        countryOrderISO[219] = "TON";
        countryOrderISO[220] = "TTG";
        countryOrderISO[221] = "TUN";
        countryOrderISO[222] = "TUR";
        countryOrderISO[223] = "TKM";
        countryOrderISO[224] = "TCA";
        countryOrderISO[225] = "TUV";
        countryOrderISO[226] = "UGA";
        countryOrderISO[227] = "UKR";
        countryOrderISO[228] = "ARE";
        countryOrderISO[229] = "USA";
        countryOrderISO[230] = "UMI";
        countryOrderISO[231] = "URY";
        countryOrderISO[232] = "UZB";
        countryOrderISO[233] = "VUT";
        countryOrderISO[234] = "VAT";
        countryOrderISO[235] = "VEN";
        countryOrderISO[236] = "VNM";
        countryOrderISO[237] = "VGB";
        countryOrderISO[238] = "VIR";
        countryOrderISO[239] = "WLF";
        countryOrderISO[240] = "ESH";
        countryOrderISO[241] = "YEM";
        countryOrderISO[242] = "ZMB";
        countryOrderISO[243] = "ZWE";
        countryOrderISO[244] = "???";
        return countryOrderISO;
    }

    consteval array<string_view, numberOfCountries> initCountryOrderISO2() noexcept {
        array<string_view, numberOfCountries> countryOrderISO2;
        countryOrderISO2[0] = "AF";
        countryOrderISO2[1] = "AX";
        countryOrderISO2[2] = "AL";
        countryOrderISO2[3] = "DZ";
        countryOrderISO2[4] = "AS";
        countryOrderISO2[5] = "AD";
        countryOrderISO2[6] = "AO";
        countryOrderISO2[7] = "AI";
        countryOrderISO2[8] = "AQ";
        countryOrderISO2[9] = "AG";
        countryOrderISO2[10] = "AR";
        countryOrderISO2[11] = "AM";
        countryOrderISO2[12] = "AW";
        countryOrderISO2[13] = "AU";
        countryOrderISO2[14] = "AT";
        countryOrderISO2[15] = "AZ";
        countryOrderISO2[16] = "BS";
        countryOrderISO2[17] = "BH";
        countryOrderISO2[18] = "BD";
        countryOrderISO2[19] = "BB";
        countryOrderISO2[20] = "BY";
        countryOrderISO2[21] = "BE";
        countryOrderISO2[22] = "BZ";
        countryOrderISO2[23] = "BJ";
        countryOrderISO2[24] = "BM";
        countryOrderISO2[25] = "BT";
        countryOrderISO2[26] = "BO";
        countryOrderISO2[27] = "BA";
        countryOrderISO2[28] = "BW";
        countryOrderISO2[29] = "BV";
        countryOrderISO2[30] = "BR";
        countryOrderISO2[31] = "IO";
        countryOrderISO2[32] = "BN";
        countryOrderISO2[33] = "BG";
        countryOrderISO2[34] = "BF";
        countryOrderISO2[35] = "BI";
        countryOrderISO2[36] = "KH";
        countryOrderISO2[37] = "CM";
        countryOrderISO2[38] = "CA";
        countryOrderISO2[39] = "CV";
        countryOrderISO2[40] = "KY";
        countryOrderISO2[41] = "CF";
        countryOrderISO2[42] = "TD";
        countryOrderISO2[43] = "CL";
        countryOrderISO2[44] = "CN";
        countryOrderISO2[45] = "CX";
        countryOrderISO2[46] = "CC";
        countryOrderISO2[47] = "CO";
        countryOrderISO2[48] = "KM";
        countryOrderISO2[49] = "CG";
        countryOrderISO2[50] = "CD";
        countryOrderISO2[51] = "CK";
        countryOrderISO2[52] = "CR";
        countryOrderISO2[53] = "CI";
        countryOrderISO2[54] = "HR";
        countryOrderISO2[55] = "CU";
        countryOrderISO2[56] = "CY";
        countryOrderISO2[57] = "CZ";
        countryOrderISO2[58] = "DK";
        countryOrderISO2[59] = "DJ";
        countryOrderISO2[60] = "DM";
        countryOrderISO2[61] = "DO";
        countryOrderISO2[62] = "EC";
        countryOrderISO2[63] = "EG";
        countryOrderISO2[64] = "SV";
        countryOrderISO2[65] = "GQ";
        countryOrderISO2[66] = "ER";
        countryOrderISO2[67] = "EE";
        countryOrderISO2[68] = "ET";
        countryOrderISO2[69] = "FO";
        countryOrderISO2[70] = "FJ";
        countryOrderISO2[71] = "FJ";
        countryOrderISO2[72] = "FI";
        countryOrderISO2[73] = "FR";
        countryOrderISO2[74] = "GF";
        countryOrderISO2[75] = "PF";
        countryOrderISO2[76] = "TF";
        countryOrderISO2[77] = "GA";
        countryOrderISO2[78] = "GM";
        countryOrderISO2[79] = "GE";
        countryOrderISO2[80] = "DE";
        countryOrderISO2[81] = "GH";
        countryOrderISO2[82] = "GI";
        countryOrderISO2[83] = "GB";
        countryOrderISO2[84] = "GR";
        countryOrderISO2[85] = "GL";
        countryOrderISO2[86] = "GD";
        countryOrderISO2[87] = "GP";
        countryOrderISO2[88] = "GU";
        countryOrderISO2[89] = "GT";
        countryOrderISO2[90] = "GG";
        countryOrderISO2[91] = "GN";
        countryOrderISO2[92] = "GW";
        countryOrderISO2[93] = "GY";
        countryOrderISO2[94] = "HT";
        countryOrderISO2[95] = "HM";
        countryOrderISO2[96] = "HN";
        countryOrderISO2[97] = "HK";
        countryOrderISO2[98] = "HU";
        countryOrderISO2[99] = "IS";
        countryOrderISO2[100] = "IN";
        countryOrderISO2[101] = "ID";
        countryOrderISO2[102] = "IR";
        countryOrderISO2[103] = "IQ";
        countryOrderISO2[104] = "IE";
        countryOrderISO2[105] = "IM";
        countryOrderISO2[106] = "IL";
        countryOrderISO2[107] = "IT";
        countryOrderISO2[108] = "JM";
        countryOrderISO2[109] = "JP";
        countryOrderISO2[110] = "JE";
        countryOrderISO2[111] = "JO";
        countryOrderISO2[112] = "KZ";
        countryOrderISO2[113] = "KE";
        countryOrderISO2[114] = "KI";
        countryOrderISO2[115] = "KP";
        countryOrderISO2[116] = "KR";
        countryOrderISO2[117] = "KW";
        countryOrderISO2[118] = "KG";
        countryOrderISO2[119] = "LA";
        countryOrderISO2[120] = "LV";
        countryOrderISO2[121] = "LB";
        countryOrderISO2[122] = "LS";
        countryOrderISO2[123] = "LR";
        countryOrderISO2[124] = "LY";
        countryOrderISO2[125] = "LI";
        countryOrderISO2[126] = "LT";
        countryOrderISO2[127] = "LU";
        countryOrderISO2[128] = "MO";
        countryOrderISO2[129] = "MK";
        countryOrderISO2[130] = "MG";
        countryOrderISO2[131] = "MW";
        countryOrderISO2[132] = "MY";
        countryOrderISO2[133] = "MV";
        countryOrderISO2[134] = "ML";
        countryOrderISO2[135] = "MT";
        countryOrderISO2[136] = "MH";
        countryOrderISO2[137] = "MQ";
        countryOrderISO2[138] = "MR";
        countryOrderISO2[139] = "MU";
        countryOrderISO2[140] = "YT";
        countryOrderISO2[141] = "MX";
        countryOrderISO2[142] = "FM";
        countryOrderISO2[143] = "MD";
        countryOrderISO2[144] = "MC";
        countryOrderISO2[145] = "MN";
        countryOrderISO2[146] = "ME";
        countryOrderISO2[147] = "MS";
        countryOrderISO2[148] = "MA";
        countryOrderISO2[149] = "MZ";
        countryOrderISO2[150] = "MM";
        countryOrderISO2[151] = "NA";
        countryOrderISO2[152] = "NR";
        countryOrderISO2[153] = "NP";
        countryOrderISO2[154] = "NL";
        countryOrderISO2[155] = "AD";
        countryOrderISO2[156] = "NC";
        countryOrderISO2[157] = "NZ";
        countryOrderISO2[158] = "NI";
        countryOrderISO2[159] = "NE";
        countryOrderISO2[160] = "NG";
        countryOrderISO2[161] = "NU";
        countryOrderISO2[162] = "NF";
        countryOrderISO2[163] = "MP";
        countryOrderISO2[164] = "NO";
        countryOrderISO2[165] = "OM";
        countryOrderISO2[166] = "PK";
        countryOrderISO2[167] = "PW";
        countryOrderISO2[168] = "PS";
        countryOrderISO2[169] = "PA";
        countryOrderISO2[170] = "PG";
        countryOrderISO2[171] = "PY";
        countryOrderISO2[172] = "PE";
        countryOrderISO2[173] = "PH";
        countryOrderISO2[174] = "PN";
        countryOrderISO2[175] = "PL";
        countryOrderISO2[176] = "PT";
        countryOrderISO2[177] = "PR";
        countryOrderISO2[178] = "QA";
        countryOrderISO2[179] = "RE";
        countryOrderISO2[180] = "RE";
        countryOrderISO2[181] = "RU";
        countryOrderISO2[182] = "RW";
        countryOrderISO2[183] = "SH";
        countryOrderISO2[184] = "KN";
        countryOrderISO2[185] = "LC";
        countryOrderISO2[186] = "PM";
        countryOrderISO2[187] = "VC";
        countryOrderISO2[188] = "WS";
        countryOrderISO2[189] = "SM";
        countryOrderISO2[190] = "ST";
        countryOrderISO2[191] = "SA";
        countryOrderISO2[192] = "SN";
        countryOrderISO2[193] = "RS";
        countryOrderISO2[194] = "SC";
        countryOrderISO2[195] = "SL";
        countryOrderISO2[196] = "SG";
        countryOrderISO2[197] = "SK";
        countryOrderISO2[198] = "SI";
        countryOrderISO2[199] = "SB";
        countryOrderISO2[200] = "SO";
        countryOrderISO2[201] = "ZA";
        countryOrderISO2[202] = "GS";
        countryOrderISO2[203] = "ES";
        countryOrderISO2[204] = "LK";
        countryOrderISO2[205] = "SD";
        countryOrderISO2[206] = "SR";
        countryOrderISO2[207] = "SJ";
        countryOrderISO2[208] = "SZ";
        countryOrderISO2[209] = "SE";
        countryOrderISO2[210] = "CH";
        countryOrderISO2[211] = "SY";
        countryOrderISO2[212] = "TW";
        countryOrderISO2[213] = "TJ";
        countryOrderISO2[214] = "TZ";
        countryOrderISO2[215] = "TH";
        countryOrderISO2[216] = "TL";
        countryOrderISO2[217] = "TG";
        countryOrderISO2[218] = "TK";
        countryOrderISO2[219] = "TO";
        countryOrderISO2[220] = "TO";
        countryOrderISO2[221] = "TN";
        countryOrderISO2[222] = "TR";
        countryOrderISO2[223] = "TM";
        countryOrderISO2[224] = "TC";
        countryOrderISO2[225] = "TV";
        countryOrderISO2[226] = "UG";
        countryOrderISO2[227] = "UA";
        countryOrderISO2[228] = "AE";
        countryOrderISO2[229] = "US";
        countryOrderISO2[230] = "UM";
        countryOrderISO2[231] = "UY";
        countryOrderISO2[232] = "UZ";
        countryOrderISO2[233] = "VU";
        countryOrderISO2[234] = "VA";
        countryOrderISO2[235] = "VE";
        countryOrderISO2[236] = "VN";
        countryOrderISO2[237] = "VG";
        countryOrderISO2[238] = "VI";
        countryOrderISO2[239] = "WF";
        countryOrderISO2[240] = "EH";
        countryOrderISO2[241] = "YE";
        countryOrderISO2[242] = "ZM";
        countryOrderISO2[243] = "ZW";
        countryOrderISO2[244] = "??";
        return countryOrderISO2;
    }

    consteval array<string_view, numberOfCountries> initCountryOrderName() noexcept {
        array<string_view, numberOfCountries> countryOrderName;
        countryOrderName[0] = "Afghanistan";
        countryOrderName[1] = "�land Islands";
        countryOrderName[2] = "Albania";
        countryOrderName[3] = "Algeria";
        countryOrderName[4] = "American Samoa";
        countryOrderName[5] = "Andorra";
        countryOrderName[6] = "Angola";
        countryOrderName[7] = "Anguilla";
        countryOrderName[8] = "Antarctica";
        countryOrderName[9] = "Antigua and Barbuda";
        countryOrderName[10] = "Argentina";
        countryOrderName[11] = "Armenia";
        countryOrderName[12] = "Aruba";
        countryOrderName[13] = "Australia";
        countryOrderName[14] = "Austria";
        countryOrderName[15] = "Azerbaijan";
        countryOrderName[16] = "Bahamas";
        countryOrderName[17] = "Bahrain";
        countryOrderName[18] = "Bangladesh";
        countryOrderName[19] = "Barbados";
        countryOrderName[20] = "Belarus";
        countryOrderName[21] = "Belgium";
        countryOrderName[22] = "Belize";
        countryOrderName[23] = "Benin";
        countryOrderName[24] = "Bermuda";
        countryOrderName[25] = "Bhutan";
        countryOrderName[26] = "Bolivia";
        countryOrderName[27] = "Bosnia and Herzegovina";
        countryOrderName[28] = "Botswana";
        countryOrderName[29] = "Bouvet Island";
        countryOrderName[30] = "Brazil";
        countryOrderName[31] = "British Indian Territory";
        countryOrderName[32] = "Brunei Darussalam";
        countryOrderName[33] = "Bulgaria";
        countryOrderName[34] = "Burkina Faso";
        countryOrderName[35] = "Burundi";
        countryOrderName[36] = "Cambodia";
        countryOrderName[37] = "Cameroon";
        countryOrderName[38] = "Canada";
        countryOrderName[39] = "Cape Verde";
        countryOrderName[40] = "Cayman Islands";
        countryOrderName[41] = "Central African Republic";
        countryOrderName[42] = "Chad";
        countryOrderName[43] = "Chile";
        countryOrderName[44] = "China";
        countryOrderName[45] = "Christmas Island";
        countryOrderName[46] = "Cocos Islands";
        countryOrderName[47] = "Colombia";
        countryOrderName[48] = "Comoros";
        countryOrderName[49] = "Congo";
        countryOrderName[50] = "Democratic Republic of the Congo";
        countryOrderName[51] = "Cook Islands";
        countryOrderName[52] = "Costa Rica";
        countryOrderName[53] = "Cote d'Ivoire"; //"C�te d'Ivoire";
        countryOrderName[54] = "Croatia";
        countryOrderName[55] = "Cuba";
        countryOrderName[56] = "Cyprus";
        countryOrderName[57] = "Czech Republic";
        countryOrderName[58] = "Denmark";
        countryOrderName[59] = "Djibouti";
        countryOrderName[60] = "Dominica";
        countryOrderName[61] = "Dominican Republic";
        countryOrderName[62] = "Ecuador";
        countryOrderName[63] = "Egypt";
        countryOrderName[64] = "El Salvador";
        countryOrderName[65] = "Equatorial Guinea";
        countryOrderName[66] = "Eritrea";
        countryOrderName[67] = "Estonia";
        countryOrderName[68] = "Ethiopia";
        countryOrderName[69] = "Faeroe Islands";
        countryOrderName[70] = "Falkland Islands";
        countryOrderName[71] = "Fiji";
        countryOrderName[72] = "Finland";
        countryOrderName[73] = "France";
        countryOrderName[74] = "French Guiana";
        countryOrderName[75] = "French Polynesia";
        countryOrderName[76] = "French Southern Territories";
        countryOrderName[77] = "Gabon";
        countryOrderName[78] = "Gambia";
        countryOrderName[79] = "Georgia";
        countryOrderName[80] = "Germany";
        countryOrderName[81] = "Ghana";
        countryOrderName[82] = "Gibraltar";
        countryOrderName[83] = "United Kingdom";
        countryOrderName[84] = "Greece";
        countryOrderName[85] = "Greenland";
        countryOrderName[86] = "Grenada";
        countryOrderName[87] = "Guadeloupe";
        countryOrderName[88] = "Guam";
        countryOrderName[89] = "Guatemala";
        countryOrderName[90] = "Guernsey";
        countryOrderName[91] = "Guinea";
        countryOrderName[92] = "Guinea-Bissau";
        countryOrderName[93] = "Guyana";
        countryOrderName[94] = "Haiti";
        countryOrderName[95] = "Heard Island and McDonald Islands";
        countryOrderName[96] = "Honduras";
        countryOrderName[97] = "Hong Kong";
        countryOrderName[98] = "Hungary";
        countryOrderName[99] = "Iceland";
        countryOrderName[100] = "India";
        countryOrderName[101] = "Indonesia";
        countryOrderName[102] = "Iran (Islamic Republic of)";
        countryOrderName[103] = "Iraq";
        countryOrderName[104] = "Ireland";
        countryOrderName[105] = "Isle of Man";
        countryOrderName[106] = "Israel";
        countryOrderName[107] = "Italy";
        countryOrderName[108] = "Jamaica";
        countryOrderName[109] = "Japan";
        countryOrderName[110] = "Jersey";
        countryOrderName[111] = "Jordan";
        countryOrderName[112] = "Kazakhstan";
        countryOrderName[113] = "Kenya";
        countryOrderName[114] = "Kiribati";
        countryOrderName[115] = "Democratic People\'s Republic of Korea";
        countryOrderName[116] = "Republic of Korea";
        countryOrderName[117] = "Kuwait";
        countryOrderName[118] = "Kyrgyzstan";
        countryOrderName[119] = "Lao People\'s Democratic Republic";
        countryOrderName[120] = "Latvia";
        countryOrderName[121] = "Lebanon";
        countryOrderName[122] = "Lesotho";
        countryOrderName[123] = "Liberia";
        countryOrderName[124] = "Libyan Arab Jamahiriya";
        countryOrderName[125] = "Liechtenstein";
        countryOrderName[126] = "Lithuania";
        countryOrderName[127] = "Luxembourg";
        countryOrderName[128] = "Macao";
        countryOrderName[129] = "The former Yugoslav Republic of Macedonia";
        countryOrderName[130] = "Madagascar";
        countryOrderName[131] = "Malawi";
        countryOrderName[132] = "Malaysia";
        countryOrderName[133] = "Maldives";
        countryOrderName[134] = "Mali";
        countryOrderName[135] = "Malta";
        countryOrderName[136] = "Marshall Islands";
        countryOrderName[137] = "Martinique";
        countryOrderName[138] = "Mauritania";
        countryOrderName[139] = "Mauritius";
        countryOrderName[140] = "Mayotte";
        countryOrderName[141] = "Mexico";
        countryOrderName[142] = "Micronesia (Federated States of)";
        countryOrderName[143] = "Republic of Moldova";
        countryOrderName[144] = "Monaco";
        countryOrderName[145] = "Mongolia";
        countryOrderName[146] = "Montenegro";
        countryOrderName[147] = "Montserrat";
        countryOrderName[148] = "Morocco";
        countryOrderName[149] = "Mozambique";
        countryOrderName[150] = "Myanmar";
        countryOrderName[151] = "Namibia";
        countryOrderName[152] = "Nauru";
        countryOrderName[153] = "Nepal";
        countryOrderName[154] = "Netherlands";
        countryOrderName[155] = "Netherlands Antilles";
        countryOrderName[156] = "New Caledonia";
        countryOrderName[157] = "New Zealand";
        countryOrderName[158] = "Nicaragua";
        countryOrderName[159] = "Niger";
        countryOrderName[160] = "Nigeria";
        countryOrderName[161] = "Niue";
        countryOrderName[162] = "Norfolk Islands";
        countryOrderName[163] = "Northern Mariana Islands";
        countryOrderName[164] = "Norway";
        countryOrderName[165] = "Oman";
        countryOrderName[166] = "Pakistan";
        countryOrderName[167] = "Palau";
        countryOrderName[168] = "Palestinian Territories";
        countryOrderName[169] = "Panama";
        countryOrderName[170] = "Papua New Guinea";
        countryOrderName[171] = "Paraguay";
        countryOrderName[172] = "Peru";
        countryOrderName[173] = "Philippines";
        countryOrderName[174] = "Pitcairn";
        countryOrderName[175] = "Poland";
        countryOrderName[176] = "Portugal";
        countryOrderName[177] = "Puerto Rico";
        countryOrderName[178] = "Qatar";
        countryOrderName[179] = "Reunion";
        countryOrderName[180] = "Romania";
        countryOrderName[181] = "Russian Federation";
        countryOrderName[182] = "Rwanda";
        countryOrderName[183] = "Saint Helena";
        countryOrderName[184] = "Saint Kitts and Nevis";
        countryOrderName[185] = "Saint Lucia";
        countryOrderName[186] = "Saint Pierre and Miquelon";
        countryOrderName[187] = "Saint Vincent and the Grenadines";
        countryOrderName[188] = "Samoa";
        countryOrderName[189] = "San Marino";
        countryOrderName[190] = "Sao Tome and Principe";
        countryOrderName[191] = "Saudi Arabia";
        countryOrderName[192] = "Senegal";
        countryOrderName[193] = "Republic of Serbia";
        countryOrderName[194] = "Seychelles";
        countryOrderName[195] = "Sierra Leone";
        countryOrderName[196] = "Singapore";
        countryOrderName[197] = "Slovakia";
        countryOrderName[198] = "Slovenia";
        countryOrderName[199] = "Solomon Islands";
        countryOrderName[200] = "Somalia";
        countryOrderName[201] = "South Africa";
        countryOrderName[202] = "South Georgia and The South Sandwich Islands";
        countryOrderName[203] = "Spain";
        countryOrderName[204] = "Sri Lanka";
        countryOrderName[205] = "Sudan";
        countryOrderName[206] = "Suriname";
        countryOrderName[207] = "Svalbard and Jan Mayen";
        countryOrderName[208] = "Swaziland";
        countryOrderName[209] = "Sweden";
        countryOrderName[210] = "Switzerland";
        countryOrderName[211] = "Syrian Arab Republic";
        countryOrderName[212] = "Taiwan";
        countryOrderName[213] = "Tajikistan";
        countryOrderName[214] = "United Republic of Tanzania";
        countryOrderName[215] = "Thailand";
        countryOrderName[216] = "Timor-Leste";
        countryOrderName[217] = "Togo";
        countryOrderName[218] = "Tokelau";
        countryOrderName[219] = "Tonga";
        countryOrderName[220] = "Trinidad and Tobago";
        countryOrderName[221] = "Tunisia";
        countryOrderName[222] = "Turkey";
        countryOrderName[223] = "Turkmenistan";
        countryOrderName[224] = "Turks and Caicos Islands";
        countryOrderName[225] = "Tuvalu";
        countryOrderName[226] = "Uganda";
        countryOrderName[227] = "Ukraine";
        countryOrderName[228] = "United Arab Emirates";
        countryOrderName[229] = "United States of America";
        countryOrderName[230] = "United States Minor Outlying Islands";
        countryOrderName[231] = "Uruguay";
        countryOrderName[232] = "Uzbekistan";
        countryOrderName[233] = "Vanuatu";
        countryOrderName[234] = "Vatican City";
        countryOrderName[235] = "Venezuela";
        countryOrderName[236] = "Viet Nam";
        countryOrderName[237] = "Virgin Islands, British";
        countryOrderName[238] = "Virgin Islands, U.S.";
        countryOrderName[239] = "Wallis and Futuna";
        countryOrderName[240] = "Western Sahara";
        countryOrderName[241] = "Yemen";
        countryOrderName[242] = "Zambia";
        countryOrderName[243] = "Zimbabwe";
        countryOrderName[244] = "noName";
        return countryOrderName;
    }

// New countryRegMix!!!!!! Croatia is added
    consteval array<string_view, numberOfCountriesRegMix> initCountryRegName() noexcept {
        array<string_view, numberOfCountriesRegMix> countryRegName;
        countryRegName[0] = "noName";
        countryRegName[1] = "Austria";
        countryRegName[2] = "Belgium";
        countryRegName[3] = "Bulgaria";
        countryRegName[4] = "Croatia";
        countryRegName[5] = "Cyprus";
        countryRegName[6] = "Czech Republic";
        countryRegName[7] = "Denmark";
        countryRegName[8] = "Estonia";
        countryRegName[9] = "Finland";
        countryRegName[10] = "France";
        countryRegName[11] = "Germany";
        countryRegName[12] = "Greece";
        countryRegName[13] = "Hungary";
        countryRegName[14] = "Ireland";
        countryRegName[15] = "Italy";
        countryRegName[16] = "Latvia";
        countryRegName[17] = "Lithuania";
        countryRegName[18] = "Luxembourg";
        countryRegName[19] = "Malta";
        countryRegName[20] = "Netherlands";
        countryRegName[21] = "Poland";
        countryRegName[22] = "Portugal";
        countryRegName[23] = "Romania";
        countryRegName[24] = "Slovakia";
        countryRegName[25] = "Slovenia";
        countryRegName[26] = "Spain";
        countryRegName[27] = "Sweden";
        countryRegName[28] = "United Kingdom";
        countryRegName[29] = "ANZ";
        countryRegName[30] = "BrazilReg";
        countryRegName[31] = "CanadaReg";
        countryRegName[32] = "ChinaReg";
        countryRegName[33] = "Former_USSR";
        countryRegName[34] = "IndiaReg";
        countryRegName[35] = "JapanReg";
        countryRegName[36] = "MexicoReg";
        countryRegName[37] = "MidEastNorthAfr";
        countryRegName[38] = "Pacific_Islands";
        countryRegName[39] = "RCAM (Rest of Central America)";
        countryRegName[40] = "RCEU (Rest of Central Europe)";
        countryRegName[41] = "ROWE (Rest of Western Europe)";
        countryRegName[42] = "RSAM (Rest of South America)";
        countryRegName[43] = "RSAS (Rest of South Asia)";
        countryRegName[44] = "RSEA_OPA (Rest of South-East Asia Pacific)";
        countryRegName[45] = "RSEA_PAC (Rest of South-East Asia Pacific)";
        countryRegName[46] = "SouthAfrReg";
        countryRegName[47] = "SouthKorea";
        countryRegName[48] = "SubSaharanAfr (Sub-Saharan Africa)";
        countryRegName[49] = "TurkeyReg";
        countryRegName[50] = "USAReg";
        return countryRegName;
    }

    consteval array<uint16_t, 34> initYearNwp() noexcept {
        array<uint16_t, 34> yearNwp{};
        yearNwp[0] = 1990;
        yearNwp[1] = 1991;
        yearNwp[2] = 1992;
        yearNwp[3] = 1993;
        yearNwp[4] = 1994;
        yearNwp[5] = 1995;
        yearNwp[6] = 1996;
        yearNwp[7] = 1997;
        yearNwp[8] = 1998;
        yearNwp[9] = 1999;
        yearNwp[10] = 2000;
        yearNwp[11] = 2001;
        yearNwp[12] = 2002;
        yearNwp[13] = 2003;
        yearNwp[14] = 2004;
        yearNwp[15] = 2005;
        yearNwp[16] = 2006;
        yearNwp[17] = 2007;
        yearNwp[18] = 2008;
        yearNwp[19] = 2009;
        yearNwp[20] = 2010;
        yearNwp[21] = 2011;
        yearNwp[22] = 2012;
        yearNwp[23] = 2013;
        yearNwp[24] = 2019;
        yearNwp[25] = 2020;
        yearNwp[26] = 2030;
        yearNwp[27] = 2040;
        yearNwp[28] = 2050;
        yearNwp[29] = 2060;
        yearNwp[30] = 2070;
        return yearNwp;
    }

//--- Years in which GLOBIOM agriculture land prices are defined for EUCLIMIT-2 project
    consteval array<uint16_t, 13> initYearLP() noexcept {
        array<uint16_t, 13> yearLP{};
        yearLP[0] = 2000;
        yearLP[1] = 2010;
        yearLP[2] = 2013;
        yearLP[3] = 2019;
        yearLP[4] = 2020;
        yearLP[5] = 2030;
        yearLP[6] = 2040;
        yearLP[7] = 2050;
        yearLP[8] = 2060;
        yearLP[9] = 2070;
        return yearLP;
    }

// Only EU27 countries + Croatia, new country codes, ordered according to new countryregmix
// Norway is added at the end
// Switzerland is added at the end
    consteval array<uint8_t, numberOfCountries> initCountryNwp() noexcept {
        array<uint8_t, numberOfCountries> countryNwp{};
        countryNwp[0] = 17; // Austria
        countryNwp[1] = 20; // Belgium
        countryNwp[2] = 24; // Bulgaria
        countryNwp[3] = 97; // Croatia
        countryNwp[4] = 56; // Cyprus
        countryNwp[5] = 57; // Czech Republic
        countryNwp[6] = 61; // Denmark
        countryNwp[7] = 69; // Estonia
        countryNwp[8] = 71; // Finland
        countryNwp[9] = 74; // France
        countryNwp[10] = 58; // Germany
        countryNwp[11] = 87; // Greece
        countryNwp[12] = 99; // Hungary
        countryNwp[13] = 103; // Ireland
        countryNwp[14] = 108; // Italy
        countryNwp[15] = 130; // Latvia
        countryNwp[16] = 128; // Lithuania
        countryNwp[17] = 129; // Luxembourg
        countryNwp[18] = 141; // Malta
        countryNwp[19] = 161; // Netherlands
        countryNwp[20] = 174; // Poland
        countryNwp[21] = 177; // Portugal
        countryNwp[22] = 183; // Romania
        countryNwp[23] = 202; // Slovakia
        countryNwp[24] = 203; // Slovenia
        countryNwp[25] = 68; // Spain
        countryNwp[26] = 204; // Sweden
        countryNwp[27] = 78; // UK
        countryNwp[28] = 162; //Norway
        countryNwp[29] = 41; //Switzerland
        return countryNwp;
    }

// country G4M code for EU28 countries for the FM sink data from the UNFCC
// Norway is added at the end
    consteval array<uint8_t, 30> initEu28OrderCode() noexcept {
        array<uint8_t, 30> eu28OrderCode{};
        eu28OrderCode[0] = 17;
        eu28OrderCode[1] = 20;
        eu28OrderCode[2] = 24;
        eu28OrderCode[3] = 97;
        eu28OrderCode[4] = 56;
        eu28OrderCode[5] = 57;
        eu28OrderCode[6] = 61;
        eu28OrderCode[7] = 69;
        eu28OrderCode[8] = 71;
        eu28OrderCode[9] = 74;
        eu28OrderCode[10] = 58;
        eu28OrderCode[11] = 87;
        eu28OrderCode[12] = 99;
        eu28OrderCode[13] = 103;
        eu28OrderCode[14] = 108;
        eu28OrderCode[15] = 130;
        eu28OrderCode[16] = 128;
        eu28OrderCode[17] = 129;
        eu28OrderCode[18] = 141;
        eu28OrderCode[19] = 161;
        eu28OrderCode[20] = 174;
        eu28OrderCode[21] = 177;
        eu28OrderCode[22] = 183;
        eu28OrderCode[23] = 202;
        eu28OrderCode[24] = 203;
        eu28OrderCode[25] = 68;
        eu28OrderCode[26] = 204;
        eu28OrderCode[27] = 78;
        eu28OrderCode[28] = 162; // Norway
        eu28OrderCode[29] = 41; // Switzerland
        return eu28OrderCode;
    }

    consteval array<double, numberOfCountries> initCountryLandArea() noexcept {
        array<double, numberOfCountries> countryLandArea{};
        countryLandArea.fill(1e12);
        return countryLandArea;
    }

// country G4M code for the Annex-1 countries for the FM sink data from the UNFCC
    consteval array<uint8_t, 42> initAnnex1OrderCode() noexcept {
        array<uint8_t, 42> annex1OrderCode{};
        annex1OrderCode[0] = 16;
        annex1OrderCode[1] = 17;
        annex1OrderCode[2] = 28;
        annex1OrderCode[3] = 20;
        annex1OrderCode[4] = 24;
        annex1OrderCode[5] = 39;
        annex1OrderCode[6] = 97;
        annex1OrderCode[7] = 56;
        annex1OrderCode[8] = 57;
        annex1OrderCode[9] = 61;
        annex1OrderCode[10] = 69;
        annex1OrderCode[11] = 71;
        annex1OrderCode[12] = 74;
        annex1OrderCode[13] = 58;
        annex1OrderCode[14] = 87;
        annex1OrderCode[15] = 99;
        annex1OrderCode[16] = 106;
        annex1OrderCode[17] = 103;
        annex1OrderCode[18] = 108;
        annex1OrderCode[19] = 111;
        annex1OrderCode[20] = 130;
        annex1OrderCode[21] = 125;
        annex1OrderCode[22] = 128;
        annex1OrderCode[23] = 129;
        annex1OrderCode[24] = 141;
        annex1OrderCode[25] = 133;
        annex1OrderCode[26] = 161;
        annex1OrderCode[27] = 165;
        annex1OrderCode[28] = 162;
        annex1OrderCode[29] = 174;
        annex1OrderCode[30] = 177;
        annex1OrderCode[31] = 183;
        annex1OrderCode[32] = 184;
        annex1OrderCode[33] = 202;
        annex1OrderCode[34] = 203;
        annex1OrderCode[35] = 68;
        annex1OrderCode[36] = 204;
        annex1OrderCode[37] = 41;
        annex1OrderCode[38] = 219;
        annex1OrderCode[39] = 224;
        annex1OrderCode[40] = 78;
        annex1OrderCode[41] = 227;
        return annex1OrderCode;
    }

// country code and Poles region code
// New country codes!!!
    consteval array<uint8_t, numberOfCountries> initCountryRegion() noexcept {
        array<uint8_t, numberOfCountries> countryRegion{};
        countryRegion[1] = 0;
        countryRegion[2] = 20;
        countryRegion[3] = 25;
        countryRegion[4] = 0;
        countryRegion[5] = 0;
        countryRegion[6] = 17;
        countryRegion[7] = 0;
        countryRegion[8] = 16;
        countryRegion[9] = 14;
        countryRegion[10] = 19;
        countryRegion[11] = 10;
        countryRegion[12] = 0;
        countryRegion[13] = 0;
        countryRegion[14] = 0;
        countryRegion[15] = 0;
        countryRegion[16] = 1;
        countryRegion[17] = 7;
        countryRegion[18] = 10;
        countryRegion[19] = 25;
        countryRegion[20] = 7;
        countryRegion[21] = 25;
        countryRegion[22] = 25;
        countryRegion[23] = 20;
        countryRegion[24] = 6;
        countryRegion[25] = 14;
        countryRegion[26] = 16;
        countryRegion[27] = 17;
        countryRegion[28] = 10;
        countryRegion[29] = 16;
        countryRegion[30] = 16;
        countryRegion[31] = 19;
        countryRegion[32] = 2;
        countryRegion[33] = 16;
        countryRegion[34] = 21;
        countryRegion[35] = 20;
        countryRegion[36] = 0;
        countryRegion[37] = 25;
        countryRegion[38] = 25;
        countryRegion[39] = 3;
        countryRegion[40] = 0;
        countryRegion[41] = 18;
        countryRegion[42] = 19;
        countryRegion[43] = 4;
        countryRegion[44] = 25;
        countryRegion[45] = 25;
        countryRegion[46] = 25;
        countryRegion[47] = 25;
        countryRegion[48] = 0;
        countryRegion[49] = 19;
        countryRegion[50] = 25;
        countryRegion[51] = 25;
        countryRegion[52] = 16;
        countryRegion[53] = 16;
        countryRegion[54] = 0;
        countryRegion[55] = 0;
        countryRegion[56] = 9;
        countryRegion[57] = 6;
        countryRegion[58] = 7;
        countryRegion[59] = 25;
        countryRegion[60] = 16;
        countryRegion[61] = 8;
        countryRegion[62] = 16;
        countryRegion[63] = 14;
        countryRegion[64] = 19;
        countryRegion[65] = 14;
        countryRegion[66] = 25;
        countryRegion[67] = 0;
        countryRegion[68] = 9;
        countryRegion[69] = 5;
        countryRegion[70] = 25;
        countryRegion[71] = 8;
        countryRegion[72] = 15;
        countryRegion[73] = 0;
        countryRegion[74] = 7;
        countryRegion[75] = 0;
        countryRegion[76] = 0;
        countryRegion[77] = 25;
        countryRegion[78] = 8;
        countryRegion[79] = 10;
        countryRegion[80] = 25;
        countryRegion[81] = 18;
        countryRegion[82] = 25;
        countryRegion[83] = 0;
        countryRegion[84] = 25;
        countryRegion[85] = 25;
        countryRegion[86] = 0;
        countryRegion[87] = 9;
        countryRegion[88] = 16;
        countryRegion[89] = 0;
        countryRegion[90] = 16;
        countryRegion[91] = 0;
        countryRegion[92] = 0;
        countryRegion[93] = 19;
        countryRegion[94] = 0;
        countryRegion[95] = 0;
        countryRegion[96] = 16;
        countryRegion[97] = 17;
        countryRegion[98] = 16;
        countryRegion[99] = 6;
        countryRegion[100] = 21;
        countryRegion[101] = 11;
        countryRegion[102] = 0;
        countryRegion[103] = 8;
        countryRegion[104] = 14;
        countryRegion[105] = 14;
        countryRegion[106] = 18;
        countryRegion[107] = 14;
        countryRegion[108] = 9;
        countryRegion[109] = 16;
        countryRegion[110] = 14;
        countryRegion[111] = 12;
        countryRegion[112] = 10;
        countryRegion[113] = 25;
        countryRegion[114] = 10;
        countryRegion[115] = 22;
        countryRegion[116] = 15;
        countryRegion[117] = 0;
        countryRegion[118] = 24;
        countryRegion[119] = 14;
        countryRegion[120] = 22;
        countryRegion[121] = 14;
        countryRegion[122] = 25;
        countryRegion[123] = 14;
        countryRegion[124] = 16;
        countryRegion[125] = 0;
        countryRegion[126] = 20;
        countryRegion[127] = 25;
        countryRegion[128] = 5;
        countryRegion[129] = 7;
        countryRegion[130] = 5;
        countryRegion[131] = 0;
        countryRegion[132] = 14;
        countryRegion[133] = 0;
        countryRegion[134] = 10;
        countryRegion[135] = 25;
        countryRegion[136] = 20;
        countryRegion[137] = 13;
        countryRegion[138] = 0;
        countryRegion[139] = 17;
        countryRegion[140] = 25;
        countryRegion[141] = 9;
        countryRegion[142] = 21;
        countryRegion[143] = 17;
        countryRegion[144] = 22;
        countryRegion[145] = 0;
        countryRegion[146] = 25;
        countryRegion[147] = 25;
        countryRegion[148] = 0;
        countryRegion[149] = 25;
        countryRegion[150] = 0;
        countryRegion[151] = 25;
        countryRegion[152] = 21;
        countryRegion[153] = 0;
        countryRegion[154] = 25;
        countryRegion[155] = 0;
        countryRegion[156] = 25;
        countryRegion[157] = 0;
        countryRegion[158] = 25;
        countryRegion[159] = 16;
        countryRegion[160] = 0;
        countryRegion[161] = 7;
        countryRegion[162] = 18;
        countryRegion[163] = 20;
        countryRegion[164] = 0;
        countryRegion[165] = 1;
        countryRegion[166] = 14;
        countryRegion[167] = 20;
        countryRegion[168] = 16;
        countryRegion[169] = 0;
        countryRegion[170] = 19;
        countryRegion[171] = 21;
        countryRegion[172] = 0;
        countryRegion[173] = 15;
        countryRegion[174] = 6;
        countryRegion[175] = 0;
        countryRegion[176] = 22;
        countryRegion[177] = 9;
        countryRegion[178] = 19;
        countryRegion[179] = 0;
        countryRegion[180] = 0;
        countryRegion[181] = 14;
        countryRegion[182] = 0;
        countryRegion[183] = 6;
        countryRegion[184] = 10;
        countryRegion[185] = 25;
        countryRegion[186] = 14;
        countryRegion[187] = 25;
        countryRegion[188] = 25;
        countryRegion[189] = 21;
        countryRegion[190] = 0;
        countryRegion[191] = 0;
        countryRegion[192] = 0;
        countryRegion[193] = 15;
        countryRegion[194] = 25;
        countryRegion[195] = 25;
        countryRegion[196] = 0;
        countryRegion[197] = 25;
        countryRegion[198] = 0;
        countryRegion[199] = 17;
        countryRegion[200] = 25;
        countryRegion[201] = 19;
        countryRegion[202] = 6;
        countryRegion[203] = 6;
        countryRegion[204] = 8;
        countryRegion[205] = 25;
        countryRegion[206] = 25;
        countryRegion[207] = 14;
        countryRegion[208] = 0;
        countryRegion[209] = 25;
        countryRegion[210] = 25;
        countryRegion[211] = 21;
        countryRegion[212] = 10;
        countryRegion[213] = 0;
        countryRegion[214] = 10;
        countryRegion[215] = 0;
        countryRegion[216] = 0;
        countryRegion[217] = 16;
        countryRegion[218] = 14;
        countryRegion[219] = 26;
        countryRegion[220] = 0;
        countryRegion[221] = 14;
        countryRegion[222] = 25;
        countryRegion[223] = 25;
        countryRegion[224] = 10;
        countryRegion[225] = 0;
        countryRegion[226] = 19;
        countryRegion[227] = 27;
        countryRegion[228] = 10;
        countryRegion[229] = 0;
        countryRegion[230] = 16;
        countryRegion[231] = 19;
        countryRegion[232] = 0;
        countryRegion[233] = 0;
        countryRegion[234] = 22;
        countryRegion[235] = 15;
        countryRegion[236] = 0;
        countryRegion[237] = 0;
        countryRegion[238] = 14;
        countryRegion[239] = 23;
        countryRegion[240] = 25;
        countryRegion[241] = 25;
        countryRegion[242] = 0;
        countryRegion[243] = 0;
        countryRegion[244] = 0;
        return countryRegion;
    }

    consteval array<double, numberOfCountries> initMaiCoefficients() noexcept {
        array<double, numberOfCountries> maiCoefficients{};
        maiCoefficients.fill(1);
        maiCoefficients[17] = 1.15 * 0.9927 * 0.9952 * 1.0015;
        maiCoefficients[20] = 1.04 * 1.01 * 1.0056 * 1.002;
        maiCoefficients[24] = 1.01 * 0.998 * 0.998;
        maiCoefficients[56] = 0.91 * 1.0292 * 0.996;
        maiCoefficients[57] = 1.11 * 1.012 * 1.00186;
        maiCoefficients[58] = 0.953864624 * 1.151 * 1.012 * 1.0044;
        maiCoefficients[61] = 0.936692813 * 1.004 * 1.001;
        maiCoefficients[68] = 0.802 * 1.023 * 1.224 * 0.99;
        maiCoefficients[69] = 0.975 * 0.971 * 1.0427 * 0.975 * 1.0015;
        maiCoefficients[71] = 0.937165466 * 1.11 * 1.0069;
        maiCoefficients[74] = 0.979 * 0.9975;
        maiCoefficients[78] = 0.87690769 * 1.142 * 1.0294 * 1.022;
        maiCoefficients[87] = 1.0073 * 0.9259 * 1.02;
        maiCoefficients[97] = 1.11 * 0.89 * 1.06898 * 0.98 * 0.99881;
        maiCoefficients[99] = 0.926 * 1.0461 * 0.991;
        maiCoefficients[103] = 1.096244868 * 1.147 * 1.0272 * 0.9991;
        maiCoefficients[108] = 1.111 * 0.961960892 * 1.00925 * 1.0024;
        maiCoefficients[128] = 0.845117989 * 1.134 * 0.97099 * 1.00997;
        maiCoefficients[129] = 2.015 * 0.7 * 0.816;
        maiCoefficients[130] = 0.67 * 2.04 * 0.7887 * 0.9899;
        maiCoefficients[161] = 0.960952497 * 0.834 * 0.9163 * 0.962 * 0.98;
        maiCoefficients[174] = 1.012 * 1.004 * 1.00196;
        maiCoefficients[177] = 0.96 * 1.175 * 1.006 * 0.9989;
        maiCoefficients[183] = 1.069 * 0.98 * 0.994 * 1.13;
        maiCoefficients[202] = 0.974 * 0.9876 * 0.9984;
        maiCoefficients[203] = 1.347 * 1.173 * 1.037 * 1.013;
        maiCoefficients[204] = 1.218 * 1.03579 * 1.018;
        return maiCoefficients;
    }

    consteval array<double, numberOfCountries> initHurdle_opt() noexcept {
        array<double, numberOfCountries> hurdle_opt{};
        hurdle_opt.fill(1);
        hurdle_opt[16] = 0.599107;
        hurdle_opt[19] = 0.368054;
        hurdle_opt[23] = 8.51867;
        hurdle_opt[55] = 7.501;
        hurdle_opt[56] = 4;
        hurdle_opt[57] = 0.201;
        hurdle_opt[60] = 0.496952;
        hurdle_opt[67] = 50.9;
        hurdle_opt[68] = 9.78531;
        hurdle_opt[70] = 0.818859;
        hurdle_opt[73] = 2.08712;
        hurdle_opt[77] = 0.543845;
        hurdle_opt[86] = 18.8552;
        hurdle_opt[96] = 7.45029;
        hurdle_opt[98] = 6.63376;
        hurdle_opt[102] = 2.7;
        hurdle_opt[107] = 8.8;
        hurdle_opt[127] = 7.54654;
        hurdle_opt[128] = 0.401;
        hurdle_opt[129] = 58.717;
        hurdle_opt[140] = 150;
        hurdle_opt[160] = 0.301;
        hurdle_opt[173] = 3.08456;
        hurdle_opt[176] = 2.88708;
        hurdle_opt[182] = 8.56416;
        hurdle_opt[201] = 5.08613;
        hurdle_opt[202] = 3.01969;
        hurdle_opt[203] = 0.785857;
        return hurdle_opt;
    }

    consteval array<double, numberOfCountries> initAfforRate_opt() noexcept {
        array<double, numberOfCountries> afforRate_opt{};
        afforRate_opt.fill(1);
        afforRate_opt[16] = 1.21025;
        afforRate_opt[19] = 2.46454;
        afforRate_opt[23] = 0.301724;
        afforRate_opt[55] = 7.53624;
        afforRate_opt[56] = 0.178468;
        afforRate_opt[57] = 0.934628;
        afforRate_opt[60] = 0.801715;
        afforRate_opt[67] = 4.05773;
        afforRate_opt[68] = 0.504609;
        afforRate_opt[70] = 1.92167;
        afforRate_opt[73] = 1.28153;
        afforRate_opt[77] = 0.69004;
        afforRate_opt[86] = 0.408741;
        afforRate_opt[96] = 0.351809;
        afforRate_opt[98] = 0.500844;
        afforRate_opt[102] = 0.708548;
        afforRate_opt[107] = 2.09293;
        afforRate_opt[127] = 0.559768;
        afforRate_opt[128] = 0.0163956;
        afforRate_opt[129] = 0.721315;
        afforRate_opt[140] = 1;
        afforRate_opt[160] = 11.5565;
        afforRate_opt[173] = 0.529406;
        afforRate_opt[176] = 4.32411;
        afforRate_opt[182] = 0.26396;
        afforRate_opt[201] = 0.230247;
        afforRate_opt[202] = 1.88306;
        afforRate_opt[203] = 3.38378;
        return afforRate_opt;
    }

    consteval array<double, numberOfCountries> initDeforRate_opt() noexcept {
        array<double, numberOfCountries> deforRate_opt{};
        deforRate_opt.fill(1);
        deforRate_opt[16] = 8.21064;
        deforRate_opt[19] = 38.3123;
        deforRate_opt[23] = 0.0565156;
        deforRate_opt[55] = 0.38485;
        deforRate_opt[56] = 31.6544;
        deforRate_opt[57] = 1.37755;
        deforRate_opt[60] = 0.670866;
        deforRate_opt[67] = 46.7072;
        deforRate_opt[68] = 0.552849;
        deforRate_opt[70] = 101.025;
        deforRate_opt[73] = 22.149;
        deforRate_opt[77] = 2.56077;
        deforRate_opt[86] = 0.0386345;
        deforRate_opt[96] = 0.0607292;
        deforRate_opt[98] = 0.478023;
        deforRate_opt[102] = 500;
        deforRate_opt[107] = 500;
        deforRate_opt[127] = 0.190799;
        deforRate_opt[128] = 3.06463;
        deforRate_opt[129] = 14.2084;
        deforRate_opt[140] = 1;
        deforRate_opt[160] = 217.651;
        deforRate_opt[173] = 0.241311;
        deforRate_opt[176] = 5.71742;
        deforRate_opt[182] = 0.337474;
        deforRate_opt[201] = 0.0766723;
        deforRate_opt[202] = 5.45089;
        deforRate_opt[203] = 11.6432;
        return deforRate_opt;
    }

    consteval array<double, numberOfCountries> initCoef_af_mod1990() noexcept {
        array<double, numberOfCountries> coef_af_mod1990{};
        coef_af_mod1990.fill(1);
        coef_af_mod1990[17] = 1.12353;
        coef_af_mod1990[20] = 0.580038;
        coef_af_mod1990[24] = 1.14376;
        coef_af_mod1990[56] = 1;
        coef_af_mod1990[57] = 0.341228;
        coef_af_mod1990[58] = 0.803829;
        coef_af_mod1990[61] = 0.974271;
        coef_af_mod1990[68] = 1.19818;
        coef_af_mod1990[69] = 0.49915;
        coef_af_mod1990[71] = 1.40596;
        coef_af_mod1990[74] = 0.776391;
        coef_af_mod1990[78] = 2.25557;
        coef_af_mod1990[87] = 1.14254;
        coef_af_mod1990[97] = 0.01;
        coef_af_mod1990[99] = 1.53962;
        coef_af_mod1990[103] = 100;
        coef_af_mod1990[108] = 1.04697;
        coef_af_mod1990[128] = 1.79458;
        coef_af_mod1990[129] = 1;
        coef_af_mod1990[130] = 2.76083;
        coef_af_mod1990[141] = 1;
        coef_af_mod1990[161] = 0.503909;
        coef_af_mod1990[174] = 0.628758;
        coef_af_mod1990[177] = 1.00156;
        coef_af_mod1990[183] = 1.23873;
        coef_af_mod1990[202] = 2.08957;
        coef_af_mod1990[203] = 0.327527;
        coef_af_mod1990[204] = 0.392572;
        return coef_af_mod1990;
    }

    consteval array<double, numberOfCountries> initCoef_af_mod1995() noexcept {
        array<double, numberOfCountries> coef_af_mod1995{};
        coef_af_mod1995.fill(1);
        coef_af_mod1995[17] = 1.0473;
        coef_af_mod1995[20] = 0.580038;
        coef_af_mod1995[24] = 1.1588;
        coef_af_mod1995[56] = 1;
        coef_af_mod1995[57] = 0.356086;
        coef_af_mod1995[58] = 0.809329;
        coef_af_mod1995[61] = 0.972984;
        coef_af_mod1995[68] = 1.19818;
        coef_af_mod1995[69] = 1.30619;
        coef_af_mod1995[71] = 1.32913;
        coef_af_mod1995[74] = 0.775183;
        coef_af_mod1995[78] = 1.37222;
        coef_af_mod1995[87] = 1.19379;
        coef_af_mod1995[97] = 0.0792667;
        coef_af_mod1995[99] = 1.21682;
        coef_af_mod1995[103] = 2.25142;
        coef_af_mod1995[108] = 1.04697;
        coef_af_mod1995[128] = 0.784298;
        coef_af_mod1995[129] = 1;
        coef_af_mod1995[130] = 0.177445;
        coef_af_mod1995[141] = 1;
        coef_af_mod1995[161] = 0.503909;
        coef_af_mod1995[174] = 0.4189;
        coef_af_mod1995[177] = 1.00777;
        coef_af_mod1995[183] = 1.23873;
        coef_af_mod1995[202] = 0.60215;
        coef_af_mod1995[203] = 2.65904;
        coef_af_mod1995[204] = 0.274221;
        return coef_af_mod1995;
    }

    consteval array<double, numberOfCountries> initCoef_af_mod2000() noexcept {
        array<double, numberOfCountries> coef_af_mod2000{};
        coef_af_mod2000.fill(1);
        coef_af_mod2000[17] = 0.74239;
        coef_af_mod2000[20] = 0.580038;
        coef_af_mod2000[24] = 1.14152;
        coef_af_mod2000[56] = 1;
        coef_af_mod2000[57] = 0.93592;
        coef_af_mod2000[58] = 0.805004;
        coef_af_mod2000[61] = 0.973093;
        coef_af_mod2000[68] = 1.19818;
        coef_af_mod2000[69] = 1.79745;
        coef_af_mod2000[71] = 1.03726;
        coef_af_mod2000[74] = 0.763034;
        coef_af_mod2000[78] = 1.38342;
        coef_af_mod2000[87] = 0.418149;
        coef_af_mod2000[97] = 0.0898457;
        coef_af_mod2000[99] = 1.50485;
        coef_af_mod2000[103] = 1.74653;
        coef_af_mod2000[108] = 1.04697;
        coef_af_mod2000[128] = 0.638073;
        coef_af_mod2000[129] = 1;
        coef_af_mod2000[130] = 1.26209;
        coef_af_mod2000[141] = 1;
        coef_af_mod2000[161] = 0.503909;
        coef_af_mod2000[174] = 1.29282;
        coef_af_mod2000[177] = 1.81829;
        coef_af_mod2000[183] = 1.2561;
        coef_af_mod2000[202] = 1.18102;
        coef_af_mod2000[203] = 2.63998;
        coef_af_mod2000[204] = 0.301035;
        return coef_af_mod2000;
    }

    consteval array<double, numberOfCountries> initCoef_af_mod2005() noexcept {
        array<double, numberOfCountries> coef_af_mod2005{};
        coef_af_mod2005.fill(1);
        coef_af_mod2005[17] = 1.33547;
        coef_af_mod2005[20] = 1.19786;
        coef_af_mod2005[24] = 1.35236;
        coef_af_mod2005[56] = 1;
        coef_af_mod2005[57] = 1.22055;
        coef_af_mod2005[58] = 0.944591;
        coef_af_mod2005[61] = 1.2918;
        coef_af_mod2005[68] = 2.61466;
        coef_af_mod2005[69] = 1.5853;
        coef_af_mod2005[71] = 0.984207;
        coef_af_mod2005[74] = 1.03129;
        coef_af_mod2005[78] = 1.45099;
        coef_af_mod2005[87] = 1.24821;
        coef_af_mod2005[97] = 0.315908;
        coef_af_mod2005[99] = 1.90183;
        coef_af_mod2005[103] = 1.75629;
        coef_af_mod2005[108] = 1.58911;
        coef_af_mod2005[128] = 1.01342;
        coef_af_mod2005[129] = 1;
        coef_af_mod2005[130] = 0.882729;
        coef_af_mod2005[141] = 1;
        coef_af_mod2005[161] = 8.07955;
        coef_af_mod2005[174] = 2.4211;
        coef_af_mod2005[177] = 2.32094;
        coef_af_mod2005[183] = 1.53962;
        coef_af_mod2005[202] = 0.82327;
        coef_af_mod2005[203] = 1.90761;
        coef_af_mod2005[204] = 0.441766;
        return coef_af_mod2005;
    }

    consteval array<double, numberOfCountries> initCoef_af_mod2010() noexcept {
        array<double, numberOfCountries> coef_af_mod2010{};
        coef_af_mod2010.fill(1);
        coef_af_mod2010[17] = 2.24441;
        coef_af_mod2010[20] = 2.56303;
        coef_af_mod2010[24] = 1.18964;
        coef_af_mod2010[56] = 1;
        coef_af_mod2010[57] = 0.98506;
        coef_af_mod2010[58] = 1.56314;
        coef_af_mod2010[61] = 1.84337;
        coef_af_mod2010[68] = 100;
        coef_af_mod2010[69] = 0.985875;
        coef_af_mod2010[71] = 0.769862;
        coef_af_mod2010[74] = 1.27674;
        coef_af_mod2010[78] = 0.942213;
        coef_af_mod2010[87] = 1.16925;
        coef_af_mod2010[97] = 1.12712;
        coef_af_mod2010[99] = 1.61516;
        coef_af_mod2010[103] = 0.860977;
        coef_af_mod2010[108] = 1.17289;
        coef_af_mod2010[128] = 0.978517;
        coef_af_mod2010[129] = 1;
        coef_af_mod2010[130] = 0.874024;
        coef_af_mod2010[141] = 1;
        coef_af_mod2010[161] = 60.628;
        coef_af_mod2010[174] = 1.62281;
        coef_af_mod2010[177] = 1.4508;
        coef_af_mod2010[183] = 1.30463;
        coef_af_mod2010[202] = 0.825966;
        coef_af_mod2010[203] = 0.185729;
        coef_af_mod2010[204] = 1.40699;
        return coef_af_mod2010;
    }

    consteval array<double, numberOfCountries> initCoef_af_mod2015() noexcept {
        array<double, numberOfCountries> coef_af_mod2015{};
        coef_af_mod2015.fill(1);
        coef_af_mod2015[17] = 2.97295;
        coef_af_mod2015[20] = 2.9347;
        coef_af_mod2015[24] = 0.761537;
        coef_af_mod2015[56] = 1;
        coef_af_mod2015[57] = 1.10309;
        coef_af_mod2015[58] = 1.17242;
        coef_af_mod2015[61] = 1.45727;
        coef_af_mod2015[68] = 100;
        coef_af_mod2015[69] = 0.668675;
        coef_af_mod2015[71] = 2.01134;
        coef_af_mod2015[74] = 1.53483;
        coef_af_mod2015[78] = 1.13483;
        coef_af_mod2015[87] = 1.15781;
        coef_af_mod2015[97] = 2.00567;
        coef_af_mod2015[99] = 0.53587;
        coef_af_mod2015[103] = 0.756463;
        coef_af_mod2015[108] = 1.61277;
        coef_af_mod2015[128] = 1.2375;
        coef_af_mod2015[129] = 1;
        coef_af_mod2015[130] = 0.820354;
        coef_af_mod2015[141] = 1;
        coef_af_mod2015[161] = 3.6932;
        coef_af_mod2015[174] = 0.880812;
        coef_af_mod2015[177] = 0.837083;
        coef_af_mod2015[183] = 0.81749;
        coef_af_mod2015[202] = 0.975507;
        coef_af_mod2015[203] = 0.246234;
        coef_af_mod2015[204] = 29.3935;
        return coef_af_mod2015;
    }

    consteval array<double, numberOfCountries> initCoef_af_mod2020() noexcept {
        array<double, numberOfCountries> coef_af_mod2020{};
        coef_af_mod2020.fill(1);
        coef_af_mod2020[17] = 2.46929;
        coef_af_mod2020[20] = 2.47435;
        coef_af_mod2020[24] = 0.762766;
        coef_af_mod2020[56] = 0.33;
        coef_af_mod2020[57] = 0.904021;
        coef_af_mod2020[58] = 2.01237;
        coef_af_mod2020[61] = 0.852743;
        coef_af_mod2020[68] = 3;
        coef_af_mod2020[69] = 0.432104;
        coef_af_mod2020[71] = 1.80436;
        coef_af_mod2020[74] = 1.30295;
        coef_af_mod2020[78] = 0.8496;
        coef_af_mod2020[87] = 1.16497;
        coef_af_mod2020[97] = 0.486382;
        coef_af_mod2020[99] = 0.33;
        coef_af_mod2020[103] = 0.521286;
        coef_af_mod2020[108] = 2.74212;
        coef_af_mod2020[128] = 0.862002;
        coef_af_mod2020[129] = 1;
        coef_af_mod2020[130] = 0.850985;
        coef_af_mod2020[141] = 1;
        coef_af_mod2020[161] = 1.52861;
        coef_af_mod2020[174] = 0.533658;
        coef_af_mod2020[177] = 0.641658;
        coef_af_mod2020[183] = 0.554571;
        coef_af_mod2020[202] = 0.847112;
        coef_af_mod2020[203] = 0.33;
        coef_af_mod2020[204] = 3;
        return coef_af_mod2020;
    }

    consteval array<double, numberOfCountries> initCoef_df_mod1990() noexcept {
        array<double, numberOfCountries> coef_df_mod1990{};
        coef_df_mod1990.fill(1);
        coef_df_mod1990[17] = 0.909453;
        coef_df_mod1990[20] = 0.451981;
        coef_df_mod1990[24] = 0.216808;
        coef_df_mod1990[56] = 0.0161486;
        coef_df_mod1990[57] = 1;
        coef_df_mod1990[58] = 0.201121;
        coef_df_mod1990[61] = 0.171302;
        coef_df_mod1990[68] = 1.21924;
        coef_df_mod1990[69] = 0.0371016;
        coef_df_mod1990[71] = 0.0751243;
        coef_df_mod1990[74] = 0.726125;
        coef_df_mod1990[78] = 0.294071;
        coef_df_mod1990[87] = 0.635318;
        coef_df_mod1990[97] = 0.01;
        coef_df_mod1990[99] = 0.719217;
        coef_df_mod1990[103] = 1;
        coef_df_mod1990[108] = 3.38386;
        coef_df_mod1990[128] = 0.01;
        coef_df_mod1990[129] = 1;
        coef_df_mod1990[130] = 1;
        coef_df_mod1990[141] = 1;
        coef_df_mod1990[161] = 0.417587;
        coef_df_mod1990[174] = 1.35839;
        coef_df_mod1990[177] = 0.540036;
        coef_df_mod1990[183] = 2.19508;
        coef_df_mod1990[202] = 3.32707;
        coef_df_mod1990[203] = 1;
        coef_df_mod1990[204] = 0.802888;
        return coef_df_mod1990;
    }

    consteval array<double, numberOfCountries> initCoef_df_mod1995() noexcept {
        array<double, numberOfCountries> coef_df_mod1995{};
        coef_df_mod1995.fill(1);
        coef_df_mod1995[17] = 0.843589;
        coef_df_mod1995[20] = 0.449486;
        coef_df_mod1995[24] = 0.457599;
        coef_df_mod1995[56] = 0.0161486;
        coef_df_mod1995[57] = 1;
        coef_df_mod1995[58] = 0.164774;
        coef_df_mod1995[61] = 0.171302;
        coef_df_mod1995[68] = 1.21924;
        coef_df_mod1995[69] = 0.192575;
        coef_df_mod1995[71] = 0.109267;
        coef_df_mod1995[74] = 0.720012;
        coef_df_mod1995[78] = 0.262808;
        coef_df_mod1995[87] = 1.63312;
        coef_df_mod1995[97] = 0.115711;
        coef_df_mod1995[99] = 0.97832;
        coef_df_mod1995[103] = 1;
        coef_df_mod1995[108] = 3.38386;
        coef_df_mod1995[128] = 0.751046;
        coef_df_mod1995[129] = 1;
        coef_df_mod1995[130] = 1;
        coef_df_mod1995[141] = 1;
        coef_df_mod1995[161] = 0.417587;
        coef_df_mod1995[174] = 1.12394;
        coef_df_mod1995[177] = 0.546928;
        coef_df_mod1995[183] = 2.19508;
        coef_df_mod1995[202] = 1.77992;
        coef_df_mod1995[203] = 1;
        coef_df_mod1995[204] = 0.656443;
        return coef_df_mod1995;
    }

    consteval array<double, numberOfCountries> initCoef_df_mod2000() noexcept {
        array<double, numberOfCountries> coef_df_mod2000{};
        coef_df_mod2000.fill(1);
        coef_df_mod2000[17] = 0.580135;
        coef_df_mod2000[20] = 0.447823;
        coef_df_mod2000[24] = 0.180981;
        coef_df_mod2000[56] = 0.0161486;
        coef_df_mod2000[57] = 1;
        coef_df_mod2000[58] = 0.201727;
        coef_df_mod2000[61] = 0.171302;
        coef_df_mod2000[68] = 1.21924;
        coef_df_mod2000[69] = 0.483204;
        coef_df_mod2000[71] = 0.167831;
        coef_df_mod2000[74] = 0.678977;
        coef_df_mod2000[78] = 0.412202;
        coef_df_mod2000[87] = 1.0177;
        coef_df_mod2000[97] = 0.712876;
        coef_df_mod2000[99] = 0.979578;
        coef_df_mod2000[103] = 1;
        coef_df_mod2000[108] = 3.38386;
        coef_df_mod2000[128] = 0.751046;
        coef_df_mod2000[129] = 1;
        coef_df_mod2000[130] = 1;
        coef_df_mod2000[141] = 1;
        coef_df_mod2000[161] = 0.417587;
        coef_df_mod2000[174] = 1.15274;
        coef_df_mod2000[177] = 1.34001;
        coef_df_mod2000[183] = 2.28981;
        coef_df_mod2000[202] = 1.36373;
        coef_df_mod2000[203] = 1;
        coef_df_mod2000[204] = 0.603531;
        return coef_df_mod2000;
    }

    consteval array<double, numberOfCountries> initCoef_df_mod2005() noexcept {
        array<double, numberOfCountries> coef_df_mod2005{};
        coef_df_mod2005.fill(1);
        coef_df_mod2005[17] = 0.942253;
        coef_df_mod2005[20] = 0.573615;
        coef_df_mod2005[24] = 0.4347;
        coef_df_mod2005[56] = 0.641214;
        coef_df_mod2005[57] = 1;
        coef_df_mod2005[58] = 1.86262;
        coef_df_mod2005[61] = 0.325975;
        coef_df_mod2005[68] = 1.423;
        coef_df_mod2005[69] = 0.623368;
        coef_df_mod2005[71] = 0.949292;
        coef_df_mod2005[74] = 0.808193;
        coef_df_mod2005[78] = 1.13224;
        coef_df_mod2005[87] = 1.28935;
        coef_df_mod2005[97] = 2.16449;
        coef_df_mod2005[99] = 0.83199;
        coef_df_mod2005[103] = 28.5409;
        coef_df_mod2005[108] = 3.74892;
        coef_df_mod2005[128] = 1.33873;
        coef_df_mod2005[129] = 3.97074;
        coef_df_mod2005[130] = 1;
        coef_df_mod2005[141] = 1;
        coef_df_mod2005[161] = 0.610487;
        coef_df_mod2005[174] = 0.873788;
        coef_df_mod2005[177] = 1.49488;
        coef_df_mod2005[183] = 1.77302;
        coef_df_mod2005[202] = 1.0794;
        coef_df_mod2005[203] = 1.0721;
        coef_df_mod2005[204] = 0.561067;
        return coef_df_mod2005;
    }

    consteval array<double, numberOfCountries> initCoef_df_mod2010() noexcept {
        array<double, numberOfCountries> coef_df_mod2010{};
        coef_df_mod2010.fill(1);
        coef_df_mod2010[17] = 1.30428;
        coef_df_mod2010[20] = 1.11757;
        coef_df_mod2010[24] = 1.30889;
        coef_df_mod2010[56] = 0.576641;
        coef_df_mod2010[57] = 1;
        coef_df_mod2010[58] = 1.73958;
        coef_df_mod2010[61] = 0.978861;
        coef_df_mod2010[68] = 1.28913;
        coef_df_mod2010[69] = 0.995185;
        coef_df_mod2010[71] = 1.71138;
        coef_df_mod2010[74] = 1.1906;
        coef_df_mod2010[78] = 1.29692;
        coef_df_mod2010[87] = 1.12151;
        coef_df_mod2010[97] = 1.78187;
        coef_df_mod2010[99] = 0.403363;
        coef_df_mod2010[103] = 0.0725173;
        coef_df_mod2010[108] = 4.28207;
        coef_df_mod2010[128] = 0.255867;
        coef_df_mod2010[129] = 0.634214;
        coef_df_mod2010[130] = 1;
        coef_df_mod2010[141] = 1;
        coef_df_mod2010[161] = 1.71487;
        coef_df_mod2010[174] = 0.402342;
        coef_df_mod2010[177] = 1.40675;
        coef_df_mod2010[183] = 0.983994;
        coef_df_mod2010[202] = 1.427;
        coef_df_mod2010[203] = 0.681512;
        coef_df_mod2010[204] = 1.11379;
        return coef_df_mod2010;
    }

    consteval array<double, numberOfCountries> initCoef_df_mod2015() noexcept {
        array<double, numberOfCountries> coef_df_mod2015{};
        coef_df_mod2015.fill(1);
        coef_df_mod2015[17] = 1.65365;
        coef_df_mod2015[20] = 2.22565;
        coef_df_mod2015[24] = 0.875064;
        coef_df_mod2015[56] = 1;
        coef_df_mod2015[57] = 0.0939934;
        coef_df_mod2015[58] = 2.17678;
        coef_df_mod2015[61] = 1.25111;
        coef_df_mod2015[68] = 1.1748;
        coef_df_mod2015[69] = 0.818999;
        coef_df_mod2015[71] = 3.35304;
        coef_df_mod2015[74] = 2.01023;
        coef_df_mod2015[78] = 1.45207;
        coef_df_mod2015[87] = 0.959598;
        coef_df_mod2015[97] = 0.699632;
        coef_df_mod2015[99] = 0.509396;
        coef_df_mod2015[103] = 100;
        coef_df_mod2015[108] = 35.7774;
        coef_df_mod2015[128] = 0.01;
        coef_df_mod2015[129] = 0.467947;
        coef_df_mod2015[130] = 1;
        coef_df_mod2015[141] = 1;
        coef_df_mod2015[161] = 7.42292;
        coef_df_mod2015[174] = 0.247423;
        coef_df_mod2015[177] = 1.01174;
        coef_df_mod2015[183] = 0.51943;
        coef_df_mod2015[202] = 0.549838;
        coef_df_mod2015[203] = 0.417618;
        coef_df_mod2015[204] = 1.48287;
        return coef_df_mod2015;
    }

    consteval array<double, numberOfCountries> initCoef_df_mod2020() noexcept {
        array<double, numberOfCountries> coef_df_mod2020{};
        coef_df_mod2020.fill(1);
        coef_df_mod2020[17] = 2.11981;
        coef_df_mod2020[20] = 3;
        coef_df_mod2020[24] = 1.05995;
        coef_df_mod2020[56] = 1;
        coef_df_mod2020[57] = 0.33;
        coef_df_mod2020[58] = 3;
        coef_df_mod2020[61] = 1.75991;
        coef_df_mod2020[68] = 3;
        coef_df_mod2020[69] = 1.08597;
        coef_df_mod2020[71] = 3;
        coef_df_mod2020[74] = 2.08795;
        coef_df_mod2020[78] = 2.03803;
        coef_df_mod2020[87] = 1.11712;
        coef_df_mod2020[97] = 0.33;
        coef_df_mod2020[99] = 1.5527;
        coef_df_mod2020[103] = 3;
        coef_df_mod2020[108] = 3;
        coef_df_mod2020[128] = 1.95496;
        coef_df_mod2020[129] = 0.33;
        coef_df_mod2020[130] = 2.40614;
        coef_df_mod2020[141] = 1;
        coef_df_mod2020[161] = 3;
        coef_df_mod2020[174] = 1.18168;
        coef_df_mod2020[177] = 1.26595;
        coef_df_mod2020[183] = 0.427848;
        coef_df_mod2020[202] = 0.741958;
        coef_df_mod2020[203] = 0.476914;
        coef_df_mod2020[204] = 3;
        return coef_df_mod2020;
    }
}

#endif
